{"ts":1378085316432,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#!/usr/bin/env python2.7\n\n\"\"\"Collatz Conjecture\nStart with a number n > 1. Find the number of steps it takes to reach 1 using\nthe following process. If 'n' is even, divide by 2. If 'n' is odd, multiply by 3\nand add 1.\n\nAuthor: Dan Granillo\"\"\"\n\nclass CollatzNumber(object):\n    steps = 0\n    def __init__(self, num):\n        self.num = num\n\n    def num_sort(self):\n        while True:\n            if self.num > 1:\n                self.steps += 1\n                if self.num % 2 == 0:\n                    self.even_func(self.num)\n                elif self.num % 2 == 1:\n                    self.odd_func(self.num)\n            else:\n                break\n        print self.steps\n\n    def even_func(self, i):\n        self.num = i / 2\n\n    def odd_func(self, i):\n        self.num = i * 3 + 1\n\nif __name__ == '__main__':\n    n = CollatzNumber(int(raw_input(\"Enter number: \")))\n    n.num_sort()\n"]],"start1":0,"start2":0,"length1":0,"length2":889}]],"length":889}
